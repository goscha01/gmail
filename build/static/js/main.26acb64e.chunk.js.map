{"version":3,"sources":["components/EmailLine.js","components/SideBar.js","components/IconsBar.js","components/Gmail.js","components/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","gmailLine","fontFamily","paddingLeft","width","display","borderTop","gmailLineText","justifyContent","margin","EmailLine","props","classes","React","useState","checked","setChecked","star","setStar","important","label","setLabel","useEffect","className","Checkbox","onChange","event","target","inputProps","IconButton","onClick","htmlColor","email","title","date","root","alignItems","borderRight","padding","button","height","textTransform","boxShadow","borderRadius","marginLeft","marginTop","add","color","fontSize","marginRight","inbox","fontWeight","backgroundColor","cursor","menu","SideBar","hover","setHover","List","ListItem","Button","list","ListItemIcon","ListItemText","primary","style","count","gridTemplateRows","placeItems","maxHeight","allignItems","paddingRight","TopBar","src","alt","gmailContainer","topIcons","borderBottom","topIconsLeft","topIconsRight","alignContent","textAlign","verticalAlign","placeItem","icon","iconsBar","Gmail","emails","setEmails","value","setValue","loading","setLoading","error","setError","allChacked","setAllChcked","setCount","page","setPage","rowsPerPage","setRowsPerPage","a","Axios","response","data","length","document","fetchData","catch","err","console","log","finally","Fragment","Grid","container","item","xs","currentTarget","TablePagination","component","onPageChange","newPage","onRowsPerPageChange","parseInt","Tabs","tabs","newValue","preventDefault","variant","indicatorColor","textColor","Tab","marginBottom","map","id","minWidth","barContainer","logBar","burger","logo","searchBarContainer","searchBarWrapper","searchBar","border","outline","topBarIcons","handleClick","alert","type","placeholder","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.26acb64e.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport StarOutlineOutlinedIcon from '@material-ui/icons/StarOutlineOutlined';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport StarIcon from  '@material-ui/icons/Star';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  gmailLine: {\r\n    fontFamily: 'Arial',\r\n    paddingLeft: '20px',\r\n    width: '100%',\r\n    display: \"flex\", \r\n    borderTop: '1px lightgray solid',\r\n     \r\n  },\r\n  gmailLineText: {\r\n    width:'100%',\r\n    display:'flex',\r\n    justifyContent: 'space-between',\r\n     margin:'auto',\r\n     paddingLeft: '5px'\r\n   }\r\n\r\n\r\n}));\r\n\r\nexport default function EmailLine  (props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [star, setStar] = useState(false)\r\n  const [label, setLabel] = useState(props.important)\r\n\r\n  useEffect(() => {\r\n    setChecked(props.checked)\r\n  },[props]) \r\n\r\n  const handleChange = (event) => {\r\n      setChecked(event.target.checked);\r\n  };\r\n\r\n  return(\r\n    <div  className={classes.gmailLine}  > \r\n      <Checkbox \r\n        checked={checked}\r\n        onChange={handleChange}\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <IconButton onClick={()=>setStar(!star)}>\r\n        {star? <StarIcon htmlColor='yellow'/> : <StarOutlineOutlinedIcon />  }\r\n        \r\n      </IconButton>\r\n      <IconButton onClick={()=>label?setLabel(false):setLabel(true)}>\r\n        {label? <LabelImportantIcon htmlColor='yellow'/> : <LabelImportantIcon /> }    \r\n      </IconButton>\r\n      \r\n        <div className={classes.gmailLineText}>\r\n             <p>{props.email}</p>  \r\n             <p> {props.title}</p>\r\n              <p>{props.date}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    borderRight: '1px lightgray solid',\r\n    fontFamily: 'Arial',\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  button: {\r\n    height: '50px',\r\n    textTransform: 'capitalize',\r\n    boxShadow: '0 2px 3px 0 gray',\r\n    width: '140px',\r\n    borderRadius: '50px',\r\n    alignItems: 'center',\r\n    marginLeft: '5px',\r\n    marginTop: '5px',\r\n    justifyContent: 'left',\r\n    '&:hover': {\r\n      boxShadow: '0 4px 6px 0 gray',\r\n     }\r\n  },\r\n  add: {\r\n    color:'green',\r\n    fontSize: '32px',\r\n    marginRight: '10px',\r\n  },\r\n  inbox: {\r\n     fontWeight: 'bold',\r\n    \"& [class*='MuiListItemText']\": {\r\n      fontWeight: \"bold\"\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor:'lightgray',\r\n      cursor: 'pointer',\r\n      borderRadius: '0 15px 15px 0'\r\n    },\r\n\r\n  },\r\n  menu: {\r\n        \"&:hover\": {\r\n      backgroundColor:'lightgray',\r\n      cursor: 'pointer',\r\n      borderRadius: '0 15px 15px 0'\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nexport default function SideBar (props) {\r\n  const classes = useStyles();\r\n  const [hover, setHover] = useState (false);\r\n\r\n  const handleClick = () => {\r\n    setHover(!hover);\r\n  };\r\n\r\n  return (\r\n   <List className={classes.root}>\r\n        <ListItem>\r\n          <Button className={classes.button}>\r\n          <AddIcon className={classes.add}  /> \r\n              Compose\r\n          </Button>\r\n        </ListItem>\r\n      <div className={classes.list}>\r\n      <ListItem className={classes.inbox} onClick={()=>handleClick()} >\r\n           <ListItemIcon>\r\n             {\r\n               hover? <InboxIcon htmlColor='red'/> :<InboxIcon />\r\n             }\r\n           \r\n           </ListItemIcon>\r\n           <ListItemText primary=\"Inbox\" style={hover?{color:'red'}: {color:'gray'}}/>\r\n            <p style={hover?{color:'red'}: {color:'gray'}}>{props.count }</p>\r\n        </ListItem>\r\n      </div>\r\n\r\n        <ListItem className={classes.menu}>\r\n            <ListItemIcon>\r\n                  <StarBorder />\r\n             </ListItemIcon>\r\n             <ListItemText primary=\"Starred\" />\r\n        </ListItem>\r\n        <ListItem className={classes.menu}>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sent mail\" />\r\n        </ListItem>\r\n        <ListItem className={classes.menu}>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n    </List>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateRows: 'repeat(4, 50px) 1px 50px',\r\n        placeItems: 'end',\r\n        '& img': {\r\n            maxHeight: '25px',\r\n            allignItems: 'end',\r\n            paddingRight: '15px'\r\n        },\r\n    },\r\n  }));\r\n\r\nexport default function TopBar () {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n                        <img src='./images/google-calendar.png' alt='google calendar icon' />\r\n                        <img src='./images/google-keep.png' alt='google keep icon' />\r\n                        <img src='./images/google-task.png' alt='google task icon' />\r\n                        <img src='./images/google-contacts.png' alt='google contacts icon' />\r\n     </div>\r\n\r\n    );\r\n    \r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailLine from './EmailLine'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Axios from 'axios'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SideBar from './SideBar';\r\nimport IconsBar from './IconsBar'\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gmailContainer: {\r\n    width: '100%',\r\n },\r\n topIcons: {\r\n  borderBottom: '1px solid lightgray',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n },\r\n  topIconsLeft: {\r\n    paddingLeft: '20px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  topIconsRight: {\r\n    alignContent: 'center',\r\n    textAlign: 'right',\r\n    verticalAlign: 'middle',\r\n    placeItem: 'center'\r\n  },\r\n  gmailLine: {\r\n    paddingLeft: '21px',\r\n    width: '100%',\r\n    display: \"inline-block\", \r\n    borderTop: '1px lightgray solid',\r\n  },\r\n  icon: {\r\n    textTransform: 'capitalize'\r\n  },\r\n  iconsBar: {\r\n    // maxWidth: '30px'\r\n    // display: 'flex',\r\n    // maxWidth: 'auto',\r\n    // justify: 'flex-end',\r\n    // alignItems: 'flex-end',\r\n    // textAlign:'flex-end',\r\n    // alignContent: 'flex-end'\r\n  }\r\n\r\n}));\r\n\r\nconst url = \"db.json\";\r\n\r\nexport default function Gmail () {\r\n  const classes = useStyles();\r\n\r\n  const [emails, setEmails] = React.useState([])\r\n  const [value, setValue] = React.useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [allChacked, setAllChcked] = useState(false)\r\n  const [count, setCount] = useState(0)\r\n\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    console.log(event.currentTarget);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    event.preventDefault();\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeAll = () => {\r\n      setAllChcked(!allChacked)\r\n\r\n  };\r\n\r\n  useEffect( () =>  {\r\n        const fetchData = async () => {\r\n          setLoading(true);\r\n          const response = await Axios(url);\r\n          setEmails(response.data.emails)\r\n          setCount(response.data.emails.length)\r\n          document.title = `Inbox ${count} emails`\r\n        }\r\n        fetchData()\r\n        .catch ((err) => {\r\n            setError(error);\r\n              console.log(err)\r\n           })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    },[count, error])\r\n\r\n    if (loading) {\r\n      return <p>Data is loading...</p>;\r\n    } \r\n  \r\n      return <React.Fragment>\r\n      <Grid className={classes.root}  container >\r\n          <Grid container item xs={2} >\r\n              <SideBar count={count}/>\r\n          </Grid>\r\n          <Grid className={classes.gmailContainer} container item xs={9} >\r\n          <Grid  className={classes.topIcons} container item xs={12} >\r\n              <Grid className={classes.topIconsLeft} item xs={2}>\r\n                <Checkbox \r\n                              checked={allChacked}\r\n                              onChange={handleChangeAll}\r\n                              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                 <RefreshIcon />\r\n                <IconButton onClick={handleClick}>\r\n                     <MoreVertIcon />\r\n       \r\n                </IconButton>\r\n            \r\n       \r\n              </Grid>\r\n              <Grid className={classes.topIconsRight} item xs={10}>\r\n              <TablePagination\r\n                    component=\"div\"\r\n                    count={count}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    rowsPerPage={rowsPerPage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                 </Grid>\r\n\r\n          </Grid>\r\n               <Tabs\r\n                      className={classes.tabs}\r\n                      value={value}\r\n                      onChange={handleTabChange}\r\n                      variant=\"fullWidth\"\r\n                      indicatorColor=\"secondary\"\r\n                      textColor=\"secondary\"\r\n                      aria-label=\"icon label tabs example\"\r\n                  >\r\n                  <Tab className={classes.icon} icon={<InboxIcon style={{ display: \"inline-block\", marginRight:\"100px\", marginBottom:'-25px' }}/> } label=\"Primary\"  />\r\n                  <Tab className={classes.icon} icon={<GroupIcon style={{ display: \"inline-block\", marginRight:\"100px\", marginBottom:'-25px' }}/>} label=\"Social\" />\r\n                  <Tab className={classes.icon} icon={<LocalOfferIcon style={{ display: \"inline-block\", marginRight:\"120px\", marginBottom:'-25px' }}/>} label=\"Promotion\" />\r\n               </Tabs>\r\n\r\n                    {emails.map((item) => (\r\n                      <EmailLine \r\n                        key={item.id}\r\n                        email={item.email}\r\n                        title={item.title}\r\n                        date={item.date}\r\n                        important={item.important}\r\n                        checked={allChacked}\r\n                        />\r\n       \r\n                      ))}\r\n\r\n   \r\n\r\n          </Grid>\r\n          <Grid className={classes.iconsBar}  item xs={1} style={{ minWidth: '30px' }}>\r\n            <IconsBar />\r\n          </Grid>\r\n      </Grid>\r\n\r\n  </React.Fragment>\r\n\r\n\r\n    \r\n\r\n}\r\n","import React from 'react';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    barContainer: {\r\n      height: '70px',\r\n      alignItems: 'center',\r\n      borderBottom: '1px lightgray solid',\r\n      color: 'gray',\r\n    },\r\n    logBar: {\r\n      height: '45px',\r\n    },\r\n    burger: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    logo: {\r\n      display: 'flex',\r\n      height: '45px',\r\n    },\r\n    searchBarContainer: {\r\n    },\r\n    searchBarWrapper: {\r\n      width: '60%',\r\n      height: '50px',\r\n      display: 'flex',\r\n      backgroundColor: 'lightgray',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      borderRadius: '5px',\r\n      paddingLeft: '5px',\r\n      paddingRight: '5px',\r\n    },\r\n    searchBar: {\r\n        width: '90%',\r\n        fontSize: '18px',\r\n        backgroundColor: 'lightgray',\r\n        border: 'none',\r\n        outline:'none',\r\n      },\r\n    topBarIcons: {\r\n      justifyContent: 'space-evenly',\r\n      '&:hover': {\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n  }));\r\n\r\nexport default function TopBar () {\r\n\r\n    const classes = useStyles();\r\n\r\n    function handleClick (event) {\r\n      console.log(event.target.id)\r\n      alert(event.target.id)\r\n    }\r\n\r\n    return (\r\n          <Grid className={classes.barContainer} container >\r\n              <Grid className={classes.logBar} container item xs={2} >\r\n                  <Grid className={classes.burger}  item xs={4}>\r\n                      <MenuIcon />\r\n                  </Grid>\r\n                  <Grid  item xs={8}>\r\n                      <img className={classes.logo}   src='./images/gmail-logo.png' alt='Gmail logo'/>\r\n                  </Grid>\r\n              </Grid>\r\n              <Grid  className={classes.searchBarContainer} container item xs={9}>\r\n                  <div className={classes.searchBarWrapper}>\r\n                       <SearchIcon />\r\n                          <input  className={classes.searchBar} type='search' placeholder=\"Search mail\"/>\r\n                        <TuneIcon />\r\n                  </div>\r\n              </Grid>\r\n              <Grid className={classes.topBarIcons} container item xs={1} >\r\n                        <HelpOutlineIcon\r\n                        id='help'\r\n                        onClick={(e)=>handleClick(e)} />\r\n                        <SettingsIcon \r\n                        id='settings'\r\n                        onClick={(e)=>handleClick(e)}/>\r\n                        <AppsIcon \r\n                        id='more'\r\n                        onClick={(e)=>handleClick(e)}/>\r\n                        <AccountCircleIcon\r\n                        id='user'\r\n                        onClick={(e)=>handleClick(e)}/>\r\n              </Grid>\r\n          </Grid>\r\n    );\r\n    \r\n\r\n}\r\n","\nimport React from 'react';\nimport './App.css';\nimport Gmail from './components/Gmail'\nimport TopBar from './components/TopBar'\n\nfunction App() {\n  return (\n      <React.Fragment>\n            <TopBar />\n            <Gmail />\n       </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}